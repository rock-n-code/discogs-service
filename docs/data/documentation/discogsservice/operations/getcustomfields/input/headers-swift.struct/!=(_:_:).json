{"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A value to compare."}]}],"name":"lhs"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Another value to compare."}]}],"name":"rhs"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Inequality is the inverse of equality. For any values "},{"code":"a","type":"codeVoice"},{"type":"text","text":" and "},{"code":"b","type":"codeVoice"},{"type":"text","text":", "},{"code":"a != b","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"implies that "},{"code":"a == b","type":"codeVoice"},{"type":"text","text":" is "},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is the default implementation of the not-equal-to operator ("},{"code":"!=","type":"codeVoice"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"for any type that conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}]}]}],"sections":[],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/DiscogsService\/documentation\/DiscogsService","doc:\/\/DiscogsService\/documentation\/DiscogsService\/Operations","doc:\/\/DiscogsService\/documentation\/DiscogsService\/Operations\/GetCustomFields","doc:\/\/DiscogsService\/documentation\/DiscogsService\/Operations\/GetCustomFields\/Input","doc:\/\/DiscogsService\/documentation\/DiscogsService\/Operations\/GetCustomFields\/Input\/Headers-swift.struct"]]},"metadata":{"externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:14DiscogsService10OperationsO15GetCustomFieldsO5InputV7HeadersV","title":"!=(_:_:)","roleHeading":"Operator","modules":[{"relatedModules":["Swift"],"name":"DiscogsService"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"symbolKind":"op","extendedModule":"Swift","role":"symbol"},"identifier":{"url":"doc:\/\/DiscogsService\/documentation\/DiscogsService\/Operations\/GetCustomFields\/Input\/Headers-swift.struct\/!=(_:_:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/discogsservice\/operations\/getcustomfields\/input\/headers-swift.struct\/!=(_:_:)"]}],"references":{"doc://DiscogsService/documentation/DiscogsService/Operations/GetCustomFields/Input/Headers-swift.struct/!=(_:_:)":{"url":"\/documentation\/discogsservice\/operations\/getcustomfields\/input\/headers-swift.struct\/!=(_:_:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"title":"!=(_:_:)","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/DiscogsService\/documentation\/DiscogsService\/Operations\/GetCustomFields\/Input\/Headers-swift.struct\/!=(_:_:)","role":"symbol"},"doc://DiscogsService/documentation/DiscogsService/Operations/GetCustomFields/Input":{"identifier":"doc:\/\/DiscogsService\/documentation\/DiscogsService\/Operations\/GetCustomFields\/Input","abstract":[],"kind":"symbol","title":"Operations.GetCustomFields.Input","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Input"}],"type":"topic","role":"symbol","url":"\/documentation\/discogsservice\/operations\/getcustomfields\/input","navigatorTitle":[{"kind":"identifier","text":"Input"}]},"doc://DiscogsService/documentation/DiscogsService/Operations/GetCustomFields/Input/Headers-swift.struct":{"identifier":"doc:\/\/DiscogsService\/documentation\/DiscogsService\/Operations\/GetCustomFields\/Input\/Headers-swift.struct","abstract":[],"kind":"symbol","title":"Operations.GetCustomFields.Input.Headers","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Headers"}],"type":"topic","role":"symbol","url":"\/documentation\/discogsservice\/operations\/getcustomfields\/input\/headers-swift.struct","navigatorTitle":[{"kind":"identifier","text":"Headers"}]},"doc://DiscogsService/documentation/DiscogsService/Operations":{"abstract":[{"type":"text","text":"API operations, with input and output types, generated from "},{"type":"codeVoice","code":"#\/paths"},{"text":" in the OpenAPI document.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/DiscogsService\/documentation\/DiscogsService\/Operations","url":"\/documentation\/discogsservice\/operations","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Operations","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Operations"}],"type":"topic","title":"Operations"},"doc://DiscogsService/documentation/DiscogsService/Operations/GetCustomFields":{"url":"\/documentation\/discogsservice\/operations\/getcustomfields","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"GetCustomFields"}],"title":"Operations.GetCustomFields","abstract":[{"text":"Get a list of custom fields defined by a user.","type":"text"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"GetCustomFields"}],"identifier":"doc:\/\/DiscogsService\/documentation\/DiscogsService\/Operations\/GetCustomFields"},"doc://DiscogsService/documentation/DiscogsService":{"title":"DiscogsService","type":"topic","url":"\/documentation\/discogsservice","identifier":"doc:\/\/DiscogsService\/documentation\/DiscogsService","abstract":[],"kind":"symbol","role":"collection"}}}